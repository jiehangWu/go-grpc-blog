// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blog_rpc.proto

package genproto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FetchAllArticlesRequest struct {
	RequestId            string   `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchAllArticlesRequest) Reset()         { *m = FetchAllArticlesRequest{} }
func (m *FetchAllArticlesRequest) String() string { return proto.CompactTextString(m) }
func (*FetchAllArticlesRequest) ProtoMessage()    {}
func (*FetchAllArticlesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee5380ba2407c57c, []int{0}
}

func (m *FetchAllArticlesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchAllArticlesRequest.Unmarshal(m, b)
}
func (m *FetchAllArticlesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchAllArticlesRequest.Marshal(b, m, deterministic)
}
func (m *FetchAllArticlesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchAllArticlesRequest.Merge(m, src)
}
func (m *FetchAllArticlesRequest) XXX_Size() int {
	return xxx_messageInfo_FetchAllArticlesRequest.Size(m)
}
func (m *FetchAllArticlesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchAllArticlesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchAllArticlesRequest proto.InternalMessageInfo

func (m *FetchAllArticlesRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

type FetchAllArticlesResponse struct {
	Articles             []*Article `protobuf:"bytes,1,rep,name=articles,proto3" json:"articles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FetchAllArticlesResponse) Reset()         { *m = FetchAllArticlesResponse{} }
func (m *FetchAllArticlesResponse) String() string { return proto.CompactTextString(m) }
func (*FetchAllArticlesResponse) ProtoMessage()    {}
func (*FetchAllArticlesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee5380ba2407c57c, []int{1}
}

func (m *FetchAllArticlesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchAllArticlesResponse.Unmarshal(m, b)
}
func (m *FetchAllArticlesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchAllArticlesResponse.Marshal(b, m, deterministic)
}
func (m *FetchAllArticlesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchAllArticlesResponse.Merge(m, src)
}
func (m *FetchAllArticlesResponse) XXX_Size() int {
	return xxx_messageInfo_FetchAllArticlesResponse.Size(m)
}
func (m *FetchAllArticlesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchAllArticlesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchAllArticlesResponse proto.InternalMessageInfo

func (m *FetchAllArticlesResponse) GetArticles() []*Article {
	if m != nil {
		return m.Articles
	}
	return nil
}

type FetchArticleByIdRequest struct {
	ArticleId            string   `protobuf:"bytes,1,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchArticleByIdRequest) Reset()         { *m = FetchArticleByIdRequest{} }
func (m *FetchArticleByIdRequest) String() string { return proto.CompactTextString(m) }
func (*FetchArticleByIdRequest) ProtoMessage()    {}
func (*FetchArticleByIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee5380ba2407c57c, []int{2}
}

func (m *FetchArticleByIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchArticleByIdRequest.Unmarshal(m, b)
}
func (m *FetchArticleByIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchArticleByIdRequest.Marshal(b, m, deterministic)
}
func (m *FetchArticleByIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchArticleByIdRequest.Merge(m, src)
}
func (m *FetchArticleByIdRequest) XXX_Size() int {
	return xxx_messageInfo_FetchArticleByIdRequest.Size(m)
}
func (m *FetchArticleByIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchArticleByIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchArticleByIdRequest proto.InternalMessageInfo

func (m *FetchArticleByIdRequest) GetArticleId() string {
	if m != nil {
		return m.ArticleId
	}
	return ""
}

type FetchArticleByIdResponse struct {
	Article              *Article `protobuf:"bytes,1,opt,name=article,proto3" json:"article,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchArticleByIdResponse) Reset()         { *m = FetchArticleByIdResponse{} }
func (m *FetchArticleByIdResponse) String() string { return proto.CompactTextString(m) }
func (*FetchArticleByIdResponse) ProtoMessage()    {}
func (*FetchArticleByIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee5380ba2407c57c, []int{3}
}

func (m *FetchArticleByIdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchArticleByIdResponse.Unmarshal(m, b)
}
func (m *FetchArticleByIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchArticleByIdResponse.Marshal(b, m, deterministic)
}
func (m *FetchArticleByIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchArticleByIdResponse.Merge(m, src)
}
func (m *FetchArticleByIdResponse) XXX_Size() int {
	return xxx_messageInfo_FetchArticleByIdResponse.Size(m)
}
func (m *FetchArticleByIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchArticleByIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchArticleByIdResponse proto.InternalMessageInfo

func (m *FetchArticleByIdResponse) GetArticle() *Article {
	if m != nil {
		return m.Article
	}
	return nil
}

type AddArticleRequest struct {
	ArticleName          string   `protobuf:"bytes,1,opt,name=article_name,json=articleName,proto3" json:"article_name,omitempty"`
	ArticleContent       string   `protobuf:"bytes,2,opt,name=article_content,json=articleContent,proto3" json:"article_content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddArticleRequest) Reset()         { *m = AddArticleRequest{} }
func (m *AddArticleRequest) String() string { return proto.CompactTextString(m) }
func (*AddArticleRequest) ProtoMessage()    {}
func (*AddArticleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee5380ba2407c57c, []int{4}
}

func (m *AddArticleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddArticleRequest.Unmarshal(m, b)
}
func (m *AddArticleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddArticleRequest.Marshal(b, m, deterministic)
}
func (m *AddArticleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddArticleRequest.Merge(m, src)
}
func (m *AddArticleRequest) XXX_Size() int {
	return xxx_messageInfo_AddArticleRequest.Size(m)
}
func (m *AddArticleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddArticleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddArticleRequest proto.InternalMessageInfo

func (m *AddArticleRequest) GetArticleName() string {
	if m != nil {
		return m.ArticleName
	}
	return ""
}

func (m *AddArticleRequest) GetArticleContent() string {
	if m != nil {
		return m.ArticleContent
	}
	return ""
}

type AddArticleResponse struct {
	IsSuccesful          bool     `protobuf:"varint,1,opt,name=is_succesful,json=isSuccesful,proto3" json:"is_succesful,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddArticleResponse) Reset()         { *m = AddArticleResponse{} }
func (m *AddArticleResponse) String() string { return proto.CompactTextString(m) }
func (*AddArticleResponse) ProtoMessage()    {}
func (*AddArticleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee5380ba2407c57c, []int{5}
}

func (m *AddArticleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddArticleResponse.Unmarshal(m, b)
}
func (m *AddArticleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddArticleResponse.Marshal(b, m, deterministic)
}
func (m *AddArticleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddArticleResponse.Merge(m, src)
}
func (m *AddArticleResponse) XXX_Size() int {
	return xxx_messageInfo_AddArticleResponse.Size(m)
}
func (m *AddArticleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddArticleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddArticleResponse proto.InternalMessageInfo

func (m *AddArticleResponse) GetIsSuccesful() bool {
	if m != nil {
		return m.IsSuccesful
	}
	return false
}

type DeleteArticleRequest struct {
	ArticleId            int64    `protobuf:"varint,1,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteArticleRequest) Reset()         { *m = DeleteArticleRequest{} }
func (m *DeleteArticleRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteArticleRequest) ProtoMessage()    {}
func (*DeleteArticleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee5380ba2407c57c, []int{6}
}

func (m *DeleteArticleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteArticleRequest.Unmarshal(m, b)
}
func (m *DeleteArticleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteArticleRequest.Marshal(b, m, deterministic)
}
func (m *DeleteArticleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteArticleRequest.Merge(m, src)
}
func (m *DeleteArticleRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteArticleRequest.Size(m)
}
func (m *DeleteArticleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteArticleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteArticleRequest proto.InternalMessageInfo

func (m *DeleteArticleRequest) GetArticleId() int64 {
	if m != nil {
		return m.ArticleId
	}
	return 0
}

type DeleteArticleResponse struct {
	IsSuccesful          bool     `protobuf:"varint,1,opt,name=is_succesful,json=isSuccesful,proto3" json:"is_succesful,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteArticleResponse) Reset()         { *m = DeleteArticleResponse{} }
func (m *DeleteArticleResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteArticleResponse) ProtoMessage()    {}
func (*DeleteArticleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee5380ba2407c57c, []int{7}
}

func (m *DeleteArticleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteArticleResponse.Unmarshal(m, b)
}
func (m *DeleteArticleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteArticleResponse.Marshal(b, m, deterministic)
}
func (m *DeleteArticleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteArticleResponse.Merge(m, src)
}
func (m *DeleteArticleResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteArticleResponse.Size(m)
}
func (m *DeleteArticleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteArticleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteArticleResponse proto.InternalMessageInfo

func (m *DeleteArticleResponse) GetIsSuccesful() bool {
	if m != nil {
		return m.IsSuccesful
	}
	return false
}

func init() {
	proto.RegisterType((*FetchAllArticlesRequest)(nil), "blog.FetchAllArticlesRequest")
	proto.RegisterType((*FetchAllArticlesResponse)(nil), "blog.FetchAllArticlesResponse")
	proto.RegisterType((*FetchArticleByIdRequest)(nil), "blog.FetchArticleByIdRequest")
	proto.RegisterType((*FetchArticleByIdResponse)(nil), "blog.FetchArticleByIdResponse")
	proto.RegisterType((*AddArticleRequest)(nil), "blog.AddArticleRequest")
	proto.RegisterType((*AddArticleResponse)(nil), "blog.AddArticleResponse")
	proto.RegisterType((*DeleteArticleRequest)(nil), "blog.DeleteArticleRequest")
	proto.RegisterType((*DeleteArticleResponse)(nil), "blog.DeleteArticleResponse")
}

func init() {
	proto.RegisterFile("blog_rpc.proto", fileDescriptor_ee5380ba2407c57c)
}

var fileDescriptor_ee5380ba2407c57c = []byte{
	// 376 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4d, 0x4f, 0xea, 0x40,
	0x14, 0xe5, 0xe3, 0xe5, 0x3d, 0xb8, 0x05, 0x9e, 0x4e, 0x34, 0x34, 0x35, 0x18, 0x98, 0x8d, 0xb8,
	0xc1, 0x04, 0x63, 0x34, 0xee, 0x0a, 0x6a, 0x82, 0x0b, 0x17, 0x65, 0xe7, 0xa6, 0x81, 0xf6, 0x8a,
	0x4d, 0x86, 0x16, 0x3b, 0x83, 0x89, 0x7f, 0xd0, 0xdf, 0x65, 0xe8, 0xcc, 0xd0, 0xd2, 0x42, 0xe2,
	0xa6, 0x1f, 0xe7, 0x9e, 0x7b, 0xcf, 0xc9, 0x3d, 0x33, 0xd0, 0x9a, 0xb3, 0x68, 0xe1, 0xc6, 0x2b,
	0x6f, 0xb0, 0x8a, 0x23, 0x11, 0x91, 0x3f, 0x9b, 0x7f, 0x0b, 0x36, 0x4f, 0x89, 0xd0, 0x3b, 0x68,
	0x3f, 0xa1, 0xf0, 0xde, 0x6d, 0xc6, 0xec, 0x58, 0x04, 0x1e, 0x43, 0xee, 0xe0, 0xc7, 0x1a, 0xb9,
	0x20, 0x1d, 0x80, 0x58, 0x7e, 0xba, 0x81, 0x6f, 0x96, 0xbb, 0xe5, 0x7e, 0xdd, 0xa9, 0x2b, 0x64,
	0xe2, 0xd3, 0x47, 0x30, 0x8b, 0x9d, 0x7c, 0x15, 0x85, 0x1c, 0xc9, 0x25, 0xd4, 0x66, 0x0a, 0x33,
	0xcb, 0xdd, 0x6a, 0xdf, 0x18, 0x36, 0x07, 0x89, 0xa8, 0x62, 0x3a, 0xdb, 0x72, 0x6a, 0x40, 0x02,
	0xa3, 0xaf, 0x89, 0x9f, 0x31, 0xa0, 0x68, 0x19, 0x03, 0x0a, 0x99, 0xf8, 0x74, 0xac, 0x0d, 0x64,
	0x3b, 0x95, 0x81, 0x0b, 0xf8, 0xa7, 0x88, 0x49, 0x5f, 0x41, 0x5f, 0x57, 0xa9, 0x0b, 0xc7, 0xb6,
	0xef, 0x6b, 0x58, 0x09, 0xf7, 0xa0, 0xa1, 0x85, 0xc3, 0xd9, 0x12, 0x95, 0xb4, 0xa1, 0xb0, 0x97,
	0xd9, 0x72, 0x23, 0xf0, 0x5f, 0x53, 0xbc, 0x28, 0x14, 0x18, 0x0a, 0xb3, 0x92, 0xb0, 0x5a, 0x0a,
	0x1e, 0x4b, 0x94, 0xde, 0x02, 0xc9, 0x0a, 0x28, 0x7f, 0x3d, 0x68, 0x04, 0xdc, 0xe5, 0x6b, 0xcf,
	0x43, 0xfe, 0xb6, 0x66, 0x89, 0x42, 0xcd, 0x31, 0x02, 0x3e, 0xd5, 0x10, 0xbd, 0x81, 0x93, 0x07,
	0x64, 0x28, 0x30, 0x67, 0xae, 0xb8, 0x95, 0x6a, 0x76, 0x2b, 0xf7, 0x70, 0x9a, 0x6b, 0xfb, 0xb5,
	0xe4, 0xf0, 0xbb, 0x02, 0xc6, 0x88, 0x45, 0x8b, 0x29, 0xc6, 0x9f, 0x81, 0x87, 0x64, 0x0a, 0x47,
	0xf9, 0x88, 0x49, 0x47, 0x2e, 0xf2, 0xc0, 0xa1, 0xb1, 0xce, 0x0f, 0x95, 0xa5, 0x0b, 0x5a, 0x4a,
	0x87, 0xa6, 0xb1, 0xed, 0x0e, 0x2d, 0x1c, 0x84, 0xdd, 0xa1, 0xc5, 0xb4, 0x69, 0x89, 0xd8, 0x00,
	0xe9, 0x96, 0x49, 0x5b, 0x85, 0x9d, 0x0f, 0xd6, 0x32, 0x8b, 0x85, 0xed, 0x88, 0x67, 0x68, 0xee,
	0x2c, 0x8e, 0x58, 0x92, 0xbc, 0x2f, 0x04, 0xeb, 0x6c, 0x6f, 0x4d, 0xcf, 0x1a, 0x19, 0xaf, 0xf5,
	0xab, 0x05, 0x86, 0xc9, 0x15, 0x9b, 0xff, 0x4d, 0x5e, 0xd7, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x45, 0x0e, 0xf5, 0x66, 0x8d, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BlogServiceClient is the client API for BlogService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlogServiceClient interface {
	FetchAllArticles(ctx context.Context, in *FetchAllArticlesRequest, opts ...grpc.CallOption) (*FetchAllArticlesResponse, error)
	FetchArticleById(ctx context.Context, in *FetchArticleByIdRequest, opts ...grpc.CallOption) (*FetchArticleByIdResponse, error)
	AddArticle(ctx context.Context, in *AddArticleRequest, opts ...grpc.CallOption) (*AddArticleResponse, error)
	DeleteArticle(ctx context.Context, in *DeleteArticleRequest, opts ...grpc.CallOption) (*DeleteArticleResponse, error)
}

type blogServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBlogServiceClient(cc grpc.ClientConnInterface) BlogServiceClient {
	return &blogServiceClient{cc}
}

func (c *blogServiceClient) FetchAllArticles(ctx context.Context, in *FetchAllArticlesRequest, opts ...grpc.CallOption) (*FetchAllArticlesResponse, error) {
	out := new(FetchAllArticlesResponse)
	err := c.cc.Invoke(ctx, "/blog.BlogService/FetchAllArticles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) FetchArticleById(ctx context.Context, in *FetchArticleByIdRequest, opts ...grpc.CallOption) (*FetchArticleByIdResponse, error) {
	out := new(FetchArticleByIdResponse)
	err := c.cc.Invoke(ctx, "/blog.BlogService/FetchArticleById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) AddArticle(ctx context.Context, in *AddArticleRequest, opts ...grpc.CallOption) (*AddArticleResponse, error) {
	out := new(AddArticleResponse)
	err := c.cc.Invoke(ctx, "/blog.BlogService/AddArticle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) DeleteArticle(ctx context.Context, in *DeleteArticleRequest, opts ...grpc.CallOption) (*DeleteArticleResponse, error) {
	out := new(DeleteArticleResponse)
	err := c.cc.Invoke(ctx, "/blog.BlogService/DeleteArticle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlogServiceServer is the server API for BlogService service.
type BlogServiceServer interface {
	FetchAllArticles(context.Context, *FetchAllArticlesRequest) (*FetchAllArticlesResponse, error)
	FetchArticleById(context.Context, *FetchArticleByIdRequest) (*FetchArticleByIdResponse, error)
	AddArticle(context.Context, *AddArticleRequest) (*AddArticleResponse, error)
	DeleteArticle(context.Context, *DeleteArticleRequest) (*DeleteArticleResponse, error)
}

// UnimplementedBlogServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBlogServiceServer struct {
}

func (*UnimplementedBlogServiceServer) FetchAllArticles(ctx context.Context, req *FetchAllArticlesRequest) (*FetchAllArticlesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchAllArticles not implemented")
}
func (*UnimplementedBlogServiceServer) FetchArticleById(ctx context.Context, req *FetchArticleByIdRequest) (*FetchArticleByIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchArticleById not implemented")
}
func (*UnimplementedBlogServiceServer) AddArticle(ctx context.Context, req *AddArticleRequest) (*AddArticleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddArticle not implemented")
}
func (*UnimplementedBlogServiceServer) DeleteArticle(ctx context.Context, req *DeleteArticleRequest) (*DeleteArticleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteArticle not implemented")
}

func RegisterBlogServiceServer(s *grpc.Server, srv BlogServiceServer) {
	s.RegisterService(&_BlogService_serviceDesc, srv)
}

func _BlogService_FetchAllArticles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchAllArticlesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).FetchAllArticles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.BlogService/FetchAllArticles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).FetchAllArticles(ctx, req.(*FetchAllArticlesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_FetchArticleById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchArticleByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).FetchArticleById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.BlogService/FetchArticleById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).FetchArticleById(ctx, req.(*FetchArticleByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_AddArticle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddArticleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).AddArticle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.BlogService/AddArticle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).AddArticle(ctx, req.(*AddArticleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_DeleteArticle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteArticleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).DeleteArticle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.BlogService/DeleteArticle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).DeleteArticle(ctx, req.(*DeleteArticleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlogService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "blog.BlogService",
	HandlerType: (*BlogServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchAllArticles",
			Handler:    _BlogService_FetchAllArticles_Handler,
		},
		{
			MethodName: "FetchArticleById",
			Handler:    _BlogService_FetchArticleById_Handler,
		},
		{
			MethodName: "AddArticle",
			Handler:    _BlogService_AddArticle_Handler,
		},
		{
			MethodName: "DeleteArticle",
			Handler:    _BlogService_DeleteArticle_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "blog_rpc.proto",
}
